apiVersion: apps/v1
kind: Deployment
metadata:
  name: shopping-db
  labels:
    app: shopping-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shopping-db
  template:
    metadata:
      labels:
        app: shopping-db
    spec:
      initContainers:
        - name: init-postgres
          image: postgres:17
          command:
            - "sh"
            - "-c"
            - |
              psql -U admin -d shopping_db -c "CREATE TABLE IF NOT EXISTS items (name VARCHAR PRIMARY KEY, amount INTEGER);"
          env:
            - name: POSTGRES_USER
              value: "admin"
            - name: POSTGRES_PASSWORD
              value: "admin"
            - name: POSTGRES_DB
              value: "shopping_db"
      containers:
        - name: postgres
          image: postgres:17
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "admin"
            - name: POSTGRES_PASSWORD
              value: "admin"
            - name: POSTGRES_DB
              value: "shopping_db"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      volumes:
        - name: postgres-data
          emptyDir: {}  # You can replace with a PersistentVolumeClaim for production
---
apiVersion: v1
kind: Service
metadata:
  name: shopping-db
spec:
  selector:
    app: shopping-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
