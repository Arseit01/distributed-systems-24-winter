apiVersion: apps/v1
kind: Deployment
metadata:
  name: shopping-app
  labels:
    app: shopping-app
spec:
  replicas: 2  # Number of replicas for scalability
  selector:
    matchLabels:
      app: shopping-app
  template:
    metadata:
      labels:
        app: shopping-app
    spec:
      initContainers:  # Add an init container to wait for the migration Job
        - name: wait-for-migrations
          image: bitnami/kubectl:latest
          command:
            - "/bin/sh"
          args:
            - |
              echo "Waiting for migration Job to complete...";
              while ! kubectl wait --for=condition=complete --timeout=60s job/shopping-app-migration; do
                echo "Still waiting...";
                sleep 5;
              done;
              echo "Migration Job completed!";
      containers:
        - name: shopping-app
          image: dryssel/distr-flask:v7
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_ENV
              value: "production"  # Set Flask environment to production
            - name: DATABASE_URL
              value: "postgresql://admin:admin@shopping-db:5432/shopping_db"  # Example DB URL
            - name: DEBUG
              value: "true"
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
